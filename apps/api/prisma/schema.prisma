// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// MODELS
model User {
  id          String     @id @default(uuid())
  username     String   @unique
  password     String
  phoneNumber String    @unique
  email        String?   @unique

  role         Role     @default(USER)

  account     Account?
}

model Account {
  id           String      @id @default(uuid())
  firstName   String
  lastName    String
  status       Status   @default(ACTIVE)
  registeredAt DateTime @default(now())

  userId       String      @unique
  user         User     @relation(fields: [userId], references: [id])

  // forkliftsHeld        Forklift[] @relation("ForkliftHolder")
  // forkliftsRegistered  Forklift[] @relation("ForkliftRegistrar")

  // tenancyAuditsAsLastOwner TenancyAudit[] @relation("LastOwner")
  // tenancyAuditsAsNewOwner  TenancyAudit[] @relation("NewOwner")
}

// model Forklift {
//   id             String           @id @default(uuid())
//   vin            String        @unique
//   status         ForkliftStatus @default(STANDBY)

//   holder         Account       @relation("ForkliftHolder", fields: [holderId], references: [id])
//   holderId       String

//   registeredBy   Account       @relation("ForkliftRegistrar", fields: [registeredById], references: [id])
//   registeredById String

//   registeredAt   DateTime      @default(now())

//   tenancyAudits  TenancyAudit[]
// }

// model TenancyAudit {
//   id           String   @id @default(uuid()) @db.Uuid

//   forklift     Forklift @relation(fields: [forkliftId], references: [id])
//   forkliftId   String

//   lastOwner    Account  @relation("LastOwner", fields: [lastOwnerId], references: [id])
//   lastOwnerId  String

//   newOwner     Account  @relation("NewOwner", fields: [newOwnerId], references: [id])
//   newOwnerId   String

//   createdAt    DateTime @default(now())
// }

// ENUMS
enum Role {
  USER
  VENDOR
}

enum Status {
  ACTIVE
  SUSPENDED
}

// enum ForkliftStatus {
//   STANDBY
//   RENTED
//   OWNED
// }  